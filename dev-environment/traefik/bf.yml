http:

  services:
    suila-web-private:
      loadBalancer:
        servers:
          - url: "http://suila-web-private:8000/"
    suila-web-public:
      loadBalancer:
        servers:
          - url: "http://suila-web-public:8000/"
    suila-api:
      loadBalancer:
        servers:
          - url: "http://suila-api:8000/"
    matomo:
      loadBalancer:
        servers:
          - url: "http://suila-matomo:80"

  routers:
    rest:
      entryPoints:
        - "websecure"
      rule: "Host(`api.suila-traefik`)"
      service: "suila-api"
      middlewares:
        - "pass-tls-clientcert"
        - "api-path"
      tls:
        options: clientcert

    public:
      entryPoints:
        - "websecure"
      rule: Host(`suila-traefik`)
      service: "suila-web-public"
      middlewares:
        - "crowdsec"
      tls: {}

#    private:
#      entryPoints:
#        - "websecure"
#      rule: "Host(`suila-traefik`)"
#      service: "suila-web-private"
#      middlewares:
#        - "crowdsec"
#      tls: {}

    matomo:
      entryPoints:
        - "web"
        - "websecure"
      rule: "Host(`matomo.suila-traefik`)"
      service: "matomo"
      tls: {}

    web-to-websecure-bf:
      entryPoints:
        - "web"
      rule: "Host(`suila-traefik`) || Host(`localhost`)"
      service: "noop@internal"
      middlewares:
        - "redirect-web-to-websecure-bf"

  middlewares:
    redirect-web-to-websecure-bf:
      redirectScheme:
        scheme: "https"
        port: 8125  # matches port in docker-compose.yml
    pass-tls-clientcert:
      passTLSClientCert:
        info:
          subject:
            country: true
            province: true
            locality: true
            organization: true
#            organizationalUnit: true
            commonName: true
            serialNumber: true
            domainComponent: true
    api-path:
      addPrefix:
        prefix: "/api"
    crowdsec:
      plugin:
        bouncer:
          defaultDecisionSeconds: 5
          crowdsecMode: live
          crowdsecAppsecEnabled: false # <--- here you can enable appsec waf
          crowdsecAppsecHost: crowdsec:7422
          crowdsecAppsecFailureBlock: true
          crowdsecAppsecUnreachableBlock: true
          # Kør `docker exec crowdsec cscli bouncers add traefik-bouncer`
          # og indsæt genereret key her
          crowdsecLapiKey: some_api_key
          # Sæt derefter `enabled` til `true`
          enabled: false
          # Hvis API-key er forkert, og enabled er `true`, kan det resultere i
          # at _alle_ requests bliver afvist
          crowdsecLapiHost: crowdsec:8080
          crowdsecLapiScheme: http
          crowdsecLapiTLSInsecureVerify: false

tls:
  stores:
    default:
      defaultCertificate:
        certFile: "/etc/traefik/certs/server.cert"
        keyFile: "/etc/traefik/certs/server.key"
  options:
    clientcert:
      minVersion: VersionTLS12
      clientAuth:
        clientAuthType: RequireAndVerifyClientCert
        caFiles:
          - "/etc/traefik/certs/ca.cert"
