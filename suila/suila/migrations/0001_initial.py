# Generated by Django 5.1.3 on 2025-01-06 14:35

import django.core.validators
import django.db.models.deletion
import simple_history.models
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="DataLoad",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("source", models.CharField(max_length=20)),
                ("parameters", models.JSONField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="EboksMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("sent", models.DateTimeField(null=True)),
                ("xml", models.BinaryField()),
                (
                    "cpr_cvr",
                    models.CharField(
                        validators=[django.core.validators.RegexValidator("\\d{8,10}")]
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("content_type", models.IntegerField()),
                ("message_id", models.CharField(max_length=255)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("created", "Genereret"),
                            ("sent", "Afsendt"),
                            ("post_processing", "Afventer efterbehandling"),
                            ("failed", "Afsendelse fejlet"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "recipient_status",
                    models.CharField(
                        choices=[
                            ("", "Gyldig e-Boks modtager"),
                            ("exempt", "Fritaget modtager"),
                            (
                                "invalid",
                                "Ugyldig E-boks modtager (sendes til efterbehandling)",
                            ),
                            ("dead", "Afdød"),
                            ("minor", "Mindreårig"),
                        ],
                        max_length=8,
                    ),
                ),
                (
                    "post_processing_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("", ""),
                            ("pending", "Afventer processering"),
                            ("address resolved", "Fundet gyldig postadresse"),
                            ("address not found", "Ingen gyldig postadresse"),
                            ("remote printed", "Overført til fjernprint"),
                        ],
                        default="",
                        max_length=20,
                    ),
                ),
                (
                    "is_postprocessing",
                    models.BooleanField(db_index=True, default=False),
                ),
            ],
        ),
        migrations.CreateModel(
            name="JobLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.TextField(
                        choices=[
                            ("calculate_stability_score", "Calculate Stability Score"),
                            (
                                "autoselect_estimation_engine",
                                "Autoselect Estimation Engine",
                            ),
                            ("load_eskat", "Load Eskat"),
                            ("estimate_income", "Estimate Income"),
                            ("calculate_benefit", "Calculate Benefit"),
                            ("export_benefits_to_prisme", "Export Benefits To Prisme"),
                        ]
                    ),
                ),
                ("runtime", models.DateTimeField(auto_now_add=True)),
                ("year", models.IntegerField(default=None, null=True)),
                ("month", models.IntegerField(default=None, null=True)),
                (
                    "status",
                    models.TextField(
                        choices=[
                            ("Kører", "Running"),
                            ("Gennemført", "Succeeded"),
                            ("Fejl", "Failed"),
                        ],
                        default="Kører",
                    ),
                ),
                ("year_param", models.IntegerField(default=None, null=True)),
                ("month_param", models.IntegerField(default=None, null=True)),
                ("count_param", models.IntegerField(default=None, null=True)),
                ("cpr_param", models.TextField(default=None, null=True)),
                ("type_param", models.TextField(default=None, null=True)),
                ("verbosity_param", models.IntegerField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="PrismeBatch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("sending", "Sending"),
                            ("sent", "Sent"),
                            ("failed", "Failed"),
                        ],
                        db_index=True,
                        default="sending",
                    ),
                ),
                ("failed_message", models.TextField()),
                ("export_date", models.DateField(db_index=True)),
                ("prefix", models.IntegerField(db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name="StandardWorkBenefitCalculationMethod",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "benefit_rate_percent",
                    models.DecimalField(
                        decimal_places=3,
                        max_digits=5,
                        verbose_name="Benefit rate percent",
                    ),
                ),
                (
                    "personal_allowance",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        verbose_name="Personal allowance",
                    ),
                ),
                (
                    "standard_allowance",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        verbose_name="Standard allowance",
                    ),
                ),
                (
                    "max_benefit",
                    models.DecimalField(
                        decimal_places=2, max_digits=12, verbose_name="Max benefit"
                    ),
                ),
                (
                    "scaledown_rate_percent",
                    models.DecimalField(
                        decimal_places=3,
                        max_digits=5,
                        verbose_name="Scaledown rate percent",
                    ),
                ),
                (
                    "scaledown_ceiling",
                    models.DecimalField(decimal_places=2, max_digits=12),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Employer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cvr",
                    models.PositiveIntegerField(
                        db_index=True,
                        unique=True,
                        validators=[
                            django.core.validators.MinValueValidator(1000000),
                            django.core.validators.MaxValueValidator(99999999),
                        ],
                        verbose_name="CVR-nummer",
                    ),
                ),
                ("name", models.CharField(blank=True, null=True)),
                (
                    "load",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="suila.dataload",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Person",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cpr",
                    models.TextField(
                        help_text="CPR nummer",
                        max_length=10,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(regex="\\d{10}")
                        ],
                        verbose_name="CPR nummer",
                    ),
                ),
                ("name", models.TextField(blank=True, null=True)),
                ("address_line_1", models.TextField(blank=True, null=True)),
                ("address_line_2", models.TextField(blank=True, null=True)),
                ("address_line_3", models.TextField(blank=True, null=True)),
                ("address_line_4", models.TextField(blank=True, null=True)),
                ("address_line_5", models.TextField(blank=True, null=True)),
                ("full_address", models.TextField(blank=True, null=True)),
                ("civil_state", models.TextField(blank=True, null=True)),
                ("location_code", models.TextField(blank=True, null=True)),
                (
                    "load",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="suila.dataload",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HistoricalPerson",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("history_change_reason", models.TextField(null=True)),
                (
                    "cpr",
                    models.TextField(
                        db_index=True,
                        help_text="CPR nummer",
                        max_length=10,
                        validators=[
                            django.core.validators.RegexValidator(regex="\\d{10}")
                        ],
                        verbose_name="CPR nummer",
                    ),
                ),
                ("name", models.TextField(blank=True, null=True)),
                ("address_line_1", models.TextField(blank=True, null=True)),
                ("address_line_2", models.TextField(blank=True, null=True)),
                ("address_line_3", models.TextField(blank=True, null=True)),
                ("address_line_4", models.TextField(blank=True, null=True)),
                ("address_line_5", models.TextField(blank=True, null=True)),
                ("full_address", models.TextField(blank=True, null=True)),
                ("civil_state", models.TextField(blank=True, null=True)),
                ("location_code", models.TextField(blank=True, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "load",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="suila.dataload",
                    ),
                ),
                (
                    "history_relation",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="history_entries",
                        to="suila.person",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical person",
                "verbose_name_plural": "historical persons",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="PersonMonth",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("import_date", models.DateField(verbose_name="Dato")),
                ("municipality_code", models.IntegerField(blank=True, null=True)),
                ("municipality_name", models.TextField(blank=True, null=True)),
                ("fully_tax_liable", models.BooleanField(blank=True, null=True)),
                ("month", models.PositiveSmallIntegerField()),
                (
                    "amount_sum",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "benefit_paid",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                (
                    "estimated_year_benefit",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                (
                    "actual_year_benefit",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                (
                    "prior_benefit_paid",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                (
                    "estimated_year_result",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                (
                    "load",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="suila.dataload",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MonthlyIncomeReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("month", models.PositiveSmallIntegerField()),
                ("year", models.PositiveSmallIntegerField()),
                ("a_income", models.DecimalField(decimal_places=2, max_digits=12)),
                ("b_income", models.DecimalField(decimal_places=2, max_digits=12)),
                (
                    "salary_income",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "catchsale_income",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "public_assistance_income",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "alimony_income",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "dis_gis_income",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "retirement_pension_income",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "disability_pension_income",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "ignored_benefits_income",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "employer_paid_gl_pension_income",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "foreign_pension_income",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "civil_servant_pension_income",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "other_pension_income",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "capital_income",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "employer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="suila.employer",
                    ),
                ),
                (
                    "load",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="suila.dataload",
                    ),
                ),
                (
                    "person_month",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="suila.personmonth",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HistoricalMonthlyIncomeReport",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("history_change_reason", models.TextField(null=True)),
                ("month", models.PositiveSmallIntegerField()),
                ("year", models.PositiveSmallIntegerField()),
                ("a_income", models.DecimalField(decimal_places=2, max_digits=12)),
                ("b_income", models.DecimalField(decimal_places=2, max_digits=12)),
                (
                    "salary_income",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "catchsale_income",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "public_assistance_income",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "alimony_income",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "dis_gis_income",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "retirement_pension_income",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "disability_pension_income",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "ignored_benefits_income",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "employer_paid_gl_pension_income",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "foreign_pension_income",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "civil_servant_pension_income",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "other_pension_income",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "capital_income",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "employer",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="suila.employer",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "load",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="suila.dataload",
                    ),
                ),
                (
                    "history_relation",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="history_entries",
                        to="suila.monthlyincomereport",
                    ),
                ),
                (
                    "person_month",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="suila.personmonth",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical monthly income report",
                "verbose_name_plural": "historical monthly income reports",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="BTaxPayment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount_paid", models.DecimalField(decimal_places=2, max_digits=12)),
                (
                    "amount_charged",
                    models.DecimalField(decimal_places=2, max_digits=12),
                ),
                ("date_charged", models.DateField()),
                ("rate_number", models.PositiveSmallIntegerField()),
                ("filename", models.TextField()),
                ("serial_number", models.PositiveBigIntegerField()),
                (
                    "person_month",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="suila.personmonth",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PersonYear",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "preferred_estimation_engine_a",
                    models.CharField(
                        choices=[
                            (
                                "InYearExtrapolationEngine",
                                "Ekstrapolation af beløb for måneder i indeværende år",
                            ),
                            (
                                "TwelveMonthsSummationEngine",
                                "Summation af beløb for de seneste 12 måneder",
                            ),
                            (
                                "TwoYearSummationEngine",
                                "Summation af beløb for de seneste 24 måneder",
                            ),
                            (
                                "SameAsLastMonthEngine",
                                "Ekstrapolation af beløb for den seneste måned",
                            ),
                            (
                                "SelfReportedEngine",
                                "Estimering udfra forskudsopgørelsen",
                            ),
                        ],
                        default="InYearExtrapolationEngine",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "preferred_estimation_engine_b",
                    models.CharField(
                        choices=[
                            (
                                "InYearExtrapolationEngine",
                                "Ekstrapolation af beløb for måneder i indeværende år",
                            ),
                            (
                                "TwelveMonthsSummationEngine",
                                "Summation af beløb for de seneste 12 måneder",
                            ),
                            (
                                "TwoYearSummationEngine",
                                "Summation af beløb for de seneste 24 måneder",
                            ),
                            (
                                "SameAsLastMonthEngine",
                                "Ekstrapolation af beløb for den seneste måned",
                            ),
                            (
                                "SelfReportedEngine",
                                "Estimering udfra forskudsopgørelsen",
                            ),
                        ],
                        default="InYearExtrapolationEngine",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "stability_score_a",
                    models.DecimalField(
                        decimal_places=1, default=None, max_digits=2, null=True
                    ),
                ),
                (
                    "stability_score_b",
                    models.DecimalField(
                        decimal_places=1, default=None, max_digits=2, null=True
                    ),
                ),
                (
                    "tax_scope",
                    models.CharField(
                        choices=[
                            ("FULD", "Fuldt Skattepligtig"),
                            ("DELVIS", "Delvist Skattepligtig"),
                            ("INGEN_MANDTAL", "Forsvundet Fra Mandtal"),
                        ],
                        default="FULD",
                        max_length=20,
                    ),
                ),
                (
                    "load",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="suila.dataload",
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="suila.person"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="personmonth",
            name="person_year",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="suila.personyear"
            ),
        ),
        migrations.CreateModel(
            name="HistoricalPersonMonth",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("history_change_reason", models.TextField(null=True)),
                ("import_date", models.DateField(verbose_name="Dato")),
                ("municipality_code", models.IntegerField(blank=True, null=True)),
                ("municipality_name", models.TextField(blank=True, null=True)),
                ("fully_tax_liable", models.BooleanField(blank=True, null=True)),
                ("month", models.PositiveSmallIntegerField()),
                (
                    "amount_sum",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "benefit_paid",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                (
                    "estimated_year_benefit",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                (
                    "actual_year_benefit",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                (
                    "prior_benefit_paid",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                (
                    "estimated_year_result",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "load",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="suila.dataload",
                    ),
                ),
                (
                    "history_relation",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="history_entries",
                        to="suila.personmonth",
                    ),
                ),
                (
                    "person_year",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="suila.personyear",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical person month",
                "verbose_name_plural": "historical person months",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalAnnualIncome",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("history_change_reason", models.TextField(null=True)),
                ("created", models.DateTimeField(blank=True, editable=False)),
                (
                    "salary",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "public_assistance_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "retirement_pension_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "disability_pension_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "ignored_benefits",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "occupational_benefit",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "foreign_pension_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "subsidy_foreign_pension_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "dis_gis_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "other_a_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "deposit_interest_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "bond_interest_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "other_interest_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "education_support_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "care_fee_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "alimony_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "foreign_dividend_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "foreign_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "free_journey_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "group_life_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "rental_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "other_b_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "free_board_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "free_lodging_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "free_housing_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "free_phone_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "free_car_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "free_internet_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "free_boat_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "free_other_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "pension_payment_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "catch_sale_market_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "catch_sale_factory_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "account_tax_result",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "account_share_business_amount",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "shareholder_dividend_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "load",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="suila.dataload",
                    ),
                ),
                (
                    "person_year",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="suila.personyear",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical annual income",
                "verbose_name_plural": "historical annual incomes",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="AnnualIncome",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                (
                    "salary",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "public_assistance_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "retirement_pension_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "disability_pension_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "ignored_benefits",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "occupational_benefit",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "foreign_pension_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "subsidy_foreign_pension_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "dis_gis_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "other_a_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "deposit_interest_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "bond_interest_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "other_interest_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "education_support_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "care_fee_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "alimony_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "foreign_dividend_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "foreign_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "free_journey_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "group_life_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "rental_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "other_b_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "free_board_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "free_lodging_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "free_housing_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "free_phone_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "free_car_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "free_internet_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "free_boat_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "free_other_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "pension_payment_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "catch_sale_market_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "catch_sale_factory_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "account_tax_result",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "account_share_business_amount",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "shareholder_dividend_income",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "load",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="suila.dataload",
                    ),
                ),
                (
                    "person_year",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="annual_income_statements",
                        to="suila.personyear",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PersonYearAssessment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                (
                    "capital_income",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "education_support_income",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "care_fee_income",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "alimony_income",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "other_b_income",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "gross_business_income",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "brutto_b_income",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "load",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="suila.dataload",
                    ),
                ),
                (
                    "person_year",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assessments",
                        to="suila.personyear",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HistoricalPersonYearAssessment",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("history_change_reason", models.TextField(null=True)),
                ("created", models.DateTimeField(blank=True, editable=False)),
                (
                    "capital_income",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "education_support_income",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "care_fee_income",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "alimony_income",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "other_b_income",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "gross_business_income",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "brutto_b_income",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "load",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="suila.dataload",
                    ),
                ),
                (
                    "person_year",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="suila.personyear",
                    ),
                ),
                (
                    "history_relation",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="history_entries",
                        to="suila.personyearassessment",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical person year assessment",
                "verbose_name_plural": "historical person year assessments",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="PersonYearEstimateSummary",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("estimation_engine", models.CharField(max_length=100)),
                (
                    "income_type",
                    models.CharField(
                        choices=[("A", "A"), ("B", "B")], default="A", max_length=1
                    ),
                ),
                (
                    "mean_error_percent",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                (
                    "rmse_percent",
                    models.DecimalField(
                        decimal_places=2, default=None, max_digits=12, null=True
                    ),
                ),
                ("timestamp", models.DateTimeField(null=True)),
                (
                    "person_year",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="suila.personyear",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PrismeAccountAlias",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("alias", models.TextField(unique=True)),
                ("tax_municipality_location_code", models.TextField()),
                ("tax_year", models.PositiveSmallIntegerField()),
            ],
            options={
                "unique_together": {("tax_municipality_location_code", "tax_year")},
            },
        ),
        migrations.CreateModel(
            name="PrismeBatchItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("g68_content", models.TextField()),
                ("g69_content", models.TextField()),
                ("posting_status_filename", models.TextField()),
                ("invoice_no", models.TextField(null=True, unique=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("sent", "Sent"),
                            ("posted", "Posted"),
                            ("failed", "Failed"),
                        ],
                        db_index=True,
                        default="sent",
                    ),
                ),
                ("error_code", models.TextField()),
                ("error_description", models.TextField()),
                (
                    "person_month",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="suila.personmonth",
                    ),
                ),
                (
                    "prisme_batch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="suila.prismebatch",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Year",
            fields=[
                (
                    "year",
                    models.PositiveSmallIntegerField(primary_key=True, serialize=False),
                ),
                (
                    "calculation_method_object_id",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "calculation_method_content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="personyear",
            name="year",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="suila.year"
            ),
        ),
        migrations.CreateModel(
            name="HistoricalPersonYear",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("history_change_reason", models.TextField(null=True)),
                (
                    "preferred_estimation_engine_a",
                    models.CharField(
                        choices=[
                            (
                                "InYearExtrapolationEngine",
                                "Ekstrapolation af beløb for måneder i indeværende år",
                            ),
                            (
                                "TwelveMonthsSummationEngine",
                                "Summation af beløb for de seneste 12 måneder",
                            ),
                            (
                                "TwoYearSummationEngine",
                                "Summation af beløb for de seneste 24 måneder",
                            ),
                            (
                                "SameAsLastMonthEngine",
                                "Ekstrapolation af beløb for den seneste måned",
                            ),
                            (
                                "SelfReportedEngine",
                                "Estimering udfra forskudsopgørelsen",
                            ),
                        ],
                        default="InYearExtrapolationEngine",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "preferred_estimation_engine_b",
                    models.CharField(
                        choices=[
                            (
                                "InYearExtrapolationEngine",
                                "Ekstrapolation af beløb for måneder i indeværende år",
                            ),
                            (
                                "TwelveMonthsSummationEngine",
                                "Summation af beløb for de seneste 12 måneder",
                            ),
                            (
                                "TwoYearSummationEngine",
                                "Summation af beløb for de seneste 24 måneder",
                            ),
                            (
                                "SameAsLastMonthEngine",
                                "Ekstrapolation af beløb for den seneste måned",
                            ),
                            (
                                "SelfReportedEngine",
                                "Estimering udfra forskudsopgørelsen",
                            ),
                        ],
                        default="InYearExtrapolationEngine",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "stability_score_a",
                    models.DecimalField(
                        decimal_places=1, default=None, max_digits=2, null=True
                    ),
                ),
                (
                    "stability_score_b",
                    models.DecimalField(
                        decimal_places=1, default=None, max_digits=2, null=True
                    ),
                ),
                (
                    "tax_scope",
                    models.CharField(
                        choices=[
                            ("FULD", "Fuldt Skattepligtig"),
                            ("DELVIS", "Delvist Skattepligtig"),
                            ("INGEN_MANDTAL", "Forsvundet Fra Mandtal"),
                        ],
                        default="FULD",
                        max_length=20,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "load",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="suila.dataload",
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="suila.person",
                    ),
                ),
                (
                    "history_relation",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="history_entries",
                        to="suila.personyear",
                    ),
                ),
                (
                    "year",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="suila.year",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical person year",
                "verbose_name_plural": "historical person years",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="IncomeEstimate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "engine",
                    models.CharField(
                        choices=[
                            (
                                "InYearExtrapolationEngine",
                                "Ekstrapolation af beløb for måneder i indeværende år",
                            ),
                            (
                                "TwelveMonthsSummationEngine",
                                "Summation af beløb for de seneste 12 måneder",
                            ),
                            (
                                "TwoYearSummationEngine",
                                "Summation af beløb for de seneste 24 måneder",
                            ),
                            (
                                "SameAsLastMonthEngine",
                                "Ekstrapolation af beløb for den seneste måned",
                            ),
                            (
                                "SelfReportedEngine",
                                "Estimering udfra forskudsopgørelsen",
                            ),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "income_type",
                    models.CharField(
                        choices=[("A", "A"), ("B", "B")], default="A", max_length=1
                    ),
                ),
                (
                    "estimated_year_result",
                    models.DecimalField(decimal_places=2, max_digits=15),
                ),
                (
                    "actual_year_result",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                ("timestamp", models.DateTimeField(null=True)),
                (
                    "person_month",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="suila.personmonth",
                    ),
                ),
            ],
            options={
                "unique_together": {("engine", "person_month", "income_type")},
            },
        ),
        migrations.AddIndex(
            model_name="personmonth",
            index=models.Index(fields=["month"], name="suila_perso_month_e352ca_idx"),
        ),
        migrations.AddIndex(
            model_name="personmonth",
            index=models.Index(
                fields=["municipality_code"], name="suila_perso_municip_81223c_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="personmonth",
            unique_together={("person_year", "month")},
        ),
        migrations.AlterUniqueTogether(
            name="personyearestimatesummary",
            unique_together={("person_year", "estimation_engine", "income_type")},
        ),
        migrations.AlterUniqueTogether(
            name="prismebatchitem",
            unique_together={("prisme_batch", "person_month")},
        ),
        migrations.AddIndex(
            model_name="personyear",
            index=models.Index(
                fields=["person", "year"], name="suila_perso_person__a997ab_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="personyear",
            unique_together={("person", "year")},
        ),
    ]
