{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "WebApi"
  },
  "host": "eskattest",
  "basePath": "/eTaxCommonDataApi",
  "schemes": [
    "https"
  ],
  "paths": {
    "/api/annualincome/get/all/{year}": {
      "get": {
        "tags": [
          "AnnualIncome"
        ],
        "summary": "Retrieves annual income data for a specific year.",
        "description": "If the data is available in the cache, it returns the cached response; otherwise, it fetches the data from the service and caches it.",
        "operationId": "AnnualIncome_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceListResponse[AnnualIncome]"
            }
          }
        }
      }
    },
    "/api/annualincome/get/{cpr}": {
      "get": {
        "tags": [
          "AnnualIncome"
        ],
        "summary": "Retrieves annual income data for a specific CPR number.",
        "description": "If the data is available in the cache, it returns the cached response; otherwise, it fetches the data from the service and caches it.",
        "operationId": "AnnualIncome_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "cpr",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceListResponse[AnnualIncome]"
            }
          }
        }
      }
    },
    "/api/annualincome/get/{cpr}/{year}": {
      "get": {
        "tags": [
          "AnnualIncome"
        ],
        "summary": "Retrieves annual income data for a specific year and CPR number.",
        "description": "If the data is available in the cache, it returns the cached response; otherwise, it fetches the data from the service and caches it.",
        "operationId": "AnnualIncome_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "cpr",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "year",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceListResponse[AnnualIncome]"
            }
          }
        }
      }
    },
    "/api/annualincome/get/chunks/all/{year}": {
      "get": {
        "tags": [
          "AnnualIncome"
        ],
        "summary": "Retrieves annual income data in chunks for a specific year.",
        "description": "If the data is available in the cache, it returns the cached response; otherwise, it fetches the data from the service and caches it.",
        "operationId": "AnnualIncome_GetAllInChunks",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "chunk",
            "in": "query",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "chunkSize",
            "in": "query",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceListResponse[AnnualIncome]"
            }
          }
        }
      }
    },
    "/api/expectedincome/get/{cpr}/{year}": {
      "get": {
        "tags": [
          "ExpectedIncome"
        ],
        "summary": "Retrieves the expected income for a given CPR number and year.",
        "description": "If the data is available in the cache, it returns the cached response; otherwise, it fetches the data from the service and caches it.",
        "operationId": "ExpectedIncome_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "cpr",
            "in": "path",
            "description": "The CPR of the individual for whom the expected income is being retrieved.",
            "required": true,
            "type": "string"
          },
          {
            "name": "year",
            "in": "path",
            "description": "The year for which the expected income is being retrieved.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceListResponse[ExpectedIncome]"
            }
          }
        }
      }
    },
    "/api/expectedincome/get/{cpr}": {
      "get": {
        "tags": [
          "ExpectedIncome"
        ],
        "summary": "Retrieves expected income data for a given CPR number.",
        "description": "If the data is available in the cache, it returns the cached response; otherwise, it fetches the data from the service and caches it.",
        "operationId": "ExpectedIncome_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "cpr",
            "in": "path",
            "description": "The CPR number to retrieve expected income data for.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceListResponse[ExpectedIncome]"
            }
          }
        }
      }
    },
    "/api/expectedincome/get/all/{year}": {
      "get": {
        "tags": [
          "ExpectedIncome"
        ],
        "summary": "Retrieves the expected income data for a specific year.",
        "description": "If the data is available in the cache, it returns the cached response; otherwise, it fetches the data from the service and caches it.",
        "operationId": "ExpectedIncome_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "The year for which the expected income data is requested.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceListResponse[ExpectedIncome]"
            }
          }
        }
      }
    },
    "/api/expectedincome/get/chunks/all/{year}": {
      "get": {
        "tags": [
          "ExpectedIncome"
        ],
        "summary": "Retrieves expected income data in chunks for a specific year.",
        "description": "If the data is available in the cache, it returns the cached response; otherwise, it fetches the data from the service and caches it.",
        "operationId": "ExpectedIncome_GetAllInChunks",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "The year for which the expected income data is requested.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "chunk",
            "in": "query",
            "description": "The chunk number to retrieve.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "chunkSize",
            "in": "query",
            "description": "The size of each chunk.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceListResponse[ExpectedIncome]"
            }
          }
        }
      }
    },
    "/api/monthlyincome/get/{cpr}/{year}": {
      "get": {
        "tags": [
          "MonthlyIncome"
        ],
        "summary": "Retrieves the monthly income data for a specific CPR number and year.",
        "description": "If the data is available in the cache, it returns the cached response; otherwise, it fetches the data from the service and caches it.",
        "operationId": "MonthlyIncome_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "cpr",
            "in": "path",
            "description": "The CPR number of the individual.",
            "required": true,
            "type": "string"
          },
          {
            "name": "year",
            "in": "path",
            "description": "The year for which the income data is requested.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceListResponse[MonthlyIncome]"
            }
          }
        }
      }
    },
    "/api/monthlyincome/get/{cpr}/{year}/{month}": {
      "get": {
        "tags": [
          "MonthlyIncome"
        ],
        "summary": "Retrieves the monthly income for a specific CPR number for a given year and month.",
        "description": "If the data is available in the cache, it returns the cached response; otherwise, it fetches the data from the service and caches it.",
        "operationId": "MonthlyIncome_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "cpr",
            "in": "path",
            "description": "The CPR number of the individual",
            "required": true,
            "type": "string"
          },
          {
            "name": "year",
            "in": "path",
            "description": "The year for which the income is requested",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "month",
            "in": "path",
            "description": "The month for which the income is requested",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceListResponse[MonthlyIncome]"
            }
          }
        }
      }
    },
    "/api/monthlyincome/get/employer/{cvr}/{cpr}/{year}": {
      "get": {
        "tags": [
          "MonthlyIncome"
        ],
        "summary": "Retrieves the monthly income data for a specific CPR number. CVR number and year.",
        "description": "If the data is available in the cache, it returns the cached response; otherwise, it fetches the data from the service and caches it.",
        "operationId": "MonthlyIncome_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "cvr",
            "in": "path",
            "description": "The CVR number of the employer",
            "required": true,
            "type": "string"
          },
          {
            "name": "cpr",
            "in": "path",
            "description": "The CPR number of the individual.",
            "required": true,
            "type": "string"
          },
          {
            "name": "year",
            "in": "path",
            "description": "The year for which the income data is requested.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceListResponse[MonthlyIncome]"
            }
          }
        }
      }
    },
    "/api/monthlyincome/get/employer/{cvr}/{cpr}/{year}/{month}": {
      "get": {
        "tags": [
          "MonthlyIncome"
        ],
        "summary": "Retrieves the monthly income for a specific CPR number and CVR number for a given year and month.",
        "description": "If the data is available in the cache, it returns the cached response; otherwise, it fetches the data from the service and caches it.",
        "operationId": "MonthlyIncome_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "cvr",
            "in": "path",
            "description": "The CVR number of the employer",
            "required": true,
            "type": "string"
          },
          {
            "name": "cpr",
            "in": "path",
            "description": "The CPR number of the individual",
            "required": true,
            "type": "string"
          },
          {
            "name": "year",
            "in": "path",
            "description": "The year for which the income is requested",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "month",
            "in": "path",
            "description": "The month for which the income is requested",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceListResponse[MonthlyIncome]"
            }
          }
        }
      }
    },
    "/api/monthlyincome/get/all/{year}": {
      "get": {
        "tags": [
          "MonthlyIncome"
        ],
        "summary": "Retrieves all monthly income data for a specific year.",
        "description": "Calling this action will possibly cause excessive response times. Consider using the chunkified version.\r\nIf the data is available in the cache, it returns the cached response; otherwise, it fetches the data from the service and caches it.",
        "operationId": "MonthlyIncome_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "The year for which to retrieve the monthly income data",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceListResponse[MonthlyIncome]"
            }
          }
        }
      }
    },
    "/api/monthlyincome/get/all/{year}/{month}": {
      "get": {
        "tags": [
          "MonthlyIncome"
        ],
        "summary": "Retrieves all monthly income data for a specific year and month.",
        "description": "If the data is available in the cache, it returns the cached response; otherwise, it fetches the data from the service and caches it.",
        "operationId": "MonthlyIncome_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "The year for which to retrieve the income data",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "month",
            "in": "path",
            "description": "The month for which to retrieve the income data",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceListResponse[MonthlyIncome]"
            }
          }
        }
      }
    },
    "/api/monthlyincome/get/all/{year}/{frommonth}/{tomonth}": {
      "get": {
        "tags": [
          "MonthlyIncome"
        ],
        "summary": "Retrieves monthly income data for a specified year and range of months.",
        "description": "If the data is available in the cache, it returns the cached response; otherwise, it fetches the data from the service and caches it.",
        "operationId": "MonthlyIncome_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "The year for which to retrieve income data.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "frommonth",
            "in": "path",
            "description": "The starting month of the range.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "tomonth",
            "in": "path",
            "description": "The ending month of the range.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceListResponse[MonthlyIncome]"
            }
          }
        }
      }
    },
    "/api/monthlyincome/get/chunks/all/{year}": {
      "get": {
        "tags": [
          "MonthlyIncome"
        ],
        "summary": "Retrieves all monthly income data in chunks for a specific year.",
        "description": "If the data is available in the cache, it returns the cached response; otherwise, it fetches the data from the service and caches it.",
        "operationId": "MonthlyIncome_GetAllInChunks",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "The year for which to retrieve the income data.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "chunk",
            "in": "query",
            "description": "The index of the chunk to retrieve.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "chunkSize",
            "in": "query",
            "description": "The size of each chunk.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceListResponse[MonthlyIncome]"
            }
          }
        }
      }
    },
    "/api/monthlyincome/get/chunks/all/{year}/{month}": {
      "get": {
        "tags": [
          "MonthlyIncome"
        ],
        "summary": "Retrieves all monthly income data in chunks based on the provided year, month, chunk index, and chunk size.",
        "description": "If the data is available in the cache, it returns the cached response; otherwise, it fetches the data from the service and caches it.",
        "operationId": "MonthlyIncome_GetAllInChunks",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "The year for which the income data is requested.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "month",
            "in": "path",
            "description": "The month for which the income data is requested.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "chunk",
            "in": "query",
            "description": "The index of the chunk to retrieve.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "chunkSize",
            "in": "query",
            "description": "The size of each chunk.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceListResponse[MonthlyIncome]"
            }
          }
        }
      }
    },
    "/api/monthlyincome/get/chunks/all/{year}/{frommonth}/{tomonth}": {
      "get": {
        "tags": [
          "MonthlyIncome"
        ],
        "summary": "Retrieves monthly income data in chunks for a specified year and range of months.",
        "description": "If the data is available in the cache, it returns the cached response; otherwise, it fetches the data from the service and caches it.",
        "operationId": "MonthlyIncome_GetAllInChunks",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "The year for which to retrieve income data.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "frommonth",
            "in": "path",
            "description": "The starting month of the range.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "tomonth",
            "in": "path",
            "description": "The ending month of the range.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "chunk",
            "in": "query",
            "description": "The chunk index to retrieve.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "chunkSize",
            "in": "query",
            "description": "The size of each chunk.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceListResponse[MonthlyIncome]"
            }
          }
        }
      }
    },
    "/api/taxinformation/get/{cpr}/{year}": {
      "get": {
        "tags": [
          "TaxInformation"
        ],
        "summary": "Retrieves tax information for a specific CPR number and year.",
        "description": "Tax information for a person can contain several census relating to different periode and municipalities in the tax year in question.\r\nIf the data is available in the cache, it returns the cached response; otherwise, it fetches the data from the service and caches it.",
        "operationId": "TaxInformation_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "cpr",
            "in": "path",
            "description": "The CPR number of the individual.",
            "required": true,
            "type": "string"
          },
          {
            "name": "year",
            "in": "path",
            "description": "The year for which tax information is requested.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceListResponse[TaxInformation]"
            }
          }
        }
      }
    },
    "/api/taxinformation/get/{cpr}": {
      "get": {
        "tags": [
          "TaxInformation"
        ],
        "summary": "Retrieves tax information for a given CPR number.",
        "description": "Tax information for a person can contain several census relating to different periode and municipalities in the tax year in question.\r\nIf the data is available in the cache, it returns the cached response; otherwise, it fetches the data from the service and caches it.",
        "operationId": "TaxInformation_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "cpr",
            "in": "path",
            "description": "The CPR number to retrieve tax information for.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceListResponse[TaxInformation]"
            }
          }
        }
      }
    },
    "/api/taxinformation/get/all/{year}": {
      "get": {
        "tags": [
          "TaxInformation"
        ],
        "summary": "Retrieves tax information for a specific year.",
        "description": "Tax information for a person can contain several census relating to different periode and municipalities in the tax year in question.\r\nIf the data is available in the cache, it returns the cached response; otherwise, it fetches the data from the service and caches it.",
        "operationId": "TaxInformation_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "The year for which tax information is requested.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceListResponse[TaxInformation]"
            }
          }
        }
      }
    },
    "/api/taxinformation/get/chunks/all/{year}": {
      "get": {
        "tags": [
          "TaxInformation"
        ],
        "summary": "Retrieves tax information in chunks for a specific year, chunk index, and chunk size.",
        "description": "Tax information for a person can contain several census relating to different periode and municipalities in the tax year in question.\r\nIf the data is available in the cache, it returns the cached response; otherwise, it fetches the data from the service and caches it.",
        "operationId": "TaxInformation_GetAllInChunks",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "The year for which tax information is requested.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "chunk",
            "in": "query",
            "description": "The chunk number to retrieve.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "chunkSize",
            "in": "query",
            "description": "The size of each chunk.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceListResponse[TaxInformation]"
            }
          }
        }
      }
    },
    "/api/taxinformation/get/taxscopes": {
      "get": {
        "tags": [
          "TaxInformation"
        ],
        "summary": "Retrieves all possible tax scopes.",
        "description": "Tax scopes are practically static data.\r\nIf the data is available in the cache, it returns the cached response; otherwise, it fetches the data from the service and caches it.",
        "operationId": "TaxInformation_GetTaxScopes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceListResponse[String]"
            }
          }
        }
      }
    },
    "/api/taxinformation/get/municipalities": {
      "get": {
        "tags": [
          "TaxInformation"
        ],
        "summary": "Retrieves all municipalities.",
        "description": "Municipalities are practically static data.\r\nIf the data is available in the cache, it returns the cached response; otherwise, it fetches the data from the service and caches it.",
        "operationId": "TaxInformation_GetMunicipalities",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceListResponse[MunicipalityInformation]"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ServiceListResponse[AnnualIncome]": {
      "description": "Represents a generic class for a service list response containing items of type T.\r\nFor a singular response data object use ServiceResponse.",
      "type": "object",
      "properties": {
        "data": {
          "description": "Gets or sets the list of data of type T.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnnualIncome"
          }
        },
        "message": {
          "description": "Gets or sets the message string with an initial value of an empty string.",
          "type": "string"
        },
        "chunk": {
          "format": "int32",
          "description": "Gets or sets the chunk value, with a default value of 1.",
          "type": "integer"
        },
        "chunkSize": {
          "format": "int32",
          "description": "Gets or sets the size of the chunk.",
          "type": "integer"
        },
        "totalChunks": {
          "format": "int32",
          "description": "Gets or sets the total number of chunks.\r\nDefault value is 1.",
          "type": "integer"
        },
        "totalRecordsInChunks": {
          "format": "int32",
          "description": "Gets or sets the total number of records in chunks.",
          "type": "integer"
        }
      }
    },
    "AnnualIncome": {
      "description": "Represents the annual income details of an individual.",
      "type": "object",
      "properties": {
        "cpr": {
          "description": "Gets or sets the CPR number of the individual.",
          "type": "string"
        },
        "year": {
          "format": "int32",
          "description": "Gets or sets the year for which the income is reported for.",
          "type": "integer"
        },
        "salary": {
          "format": "double",
          "description": "Gets or sets the salary income.",
          "type": "number"
        },
        "publicAssistanceIncome": {
          "format": "double",
          "description": "Gets or sets the public assistance income.",
          "type": "number"
        },
        "retirementPensionIncome": {
          "format": "double",
          "description": "Gets or sets the retirement pension income.",
          "type": "number"
        },
        "disabilityPensionIncome": {
          "format": "double",
          "description": "Gets or sets the disability pension income.",
          "type": "number"
        },
        "ignoredBenefits": {
          "format": "double",
          "description": "Gets or sets the ignored benefits income.",
          "type": "number"
        },
        "occupationalBenefit": {
          "format": "double",
          "description": "Gets or sets the occupational benefit income.",
          "type": "number"
        },
        "foreignPensionIncome": {
          "format": "double",
          "description": "Gets or sets the foreign pension income.",
          "type": "number"
        },
        "subsidyForeignPensionIncome": {
          "format": "double",
          "description": "Gets or sets the subsidy foreign pension income.",
          "type": "number"
        },
        "disGisIncome": {
          "format": "double",
          "description": "Gets or sets the dis GIS income.",
          "type": "number"
        },
        "otherAIncome": {
          "format": "double",
          "description": "Gets or sets the other A income.",
          "type": "number"
        },
        "depositInterestIncome": {
          "format": "double",
          "description": "Gets or sets the deposit interest income.",
          "type": "number"
        },
        "bondInterestIncome": {
          "format": "double",
          "description": "Gets or sets the bond interest income.",
          "type": "number"
        },
        "otherInterestIncome": {
          "format": "double",
          "description": "Gets or sets the other interest income.",
          "type": "number"
        },
        "educationSupportIncome": {
          "format": "double",
          "description": "Gets or sets the education support income.",
          "type": "number"
        },
        "careFeeIncome": {
          "format": "double",
          "description": "Gets or sets the care fee income.",
          "type": "number"
        },
        "alimonyIncome": {
          "format": "double",
          "description": "Gets or sets the alimony income.",
          "type": "number"
        },
        "foreignDividendIncome": {
          "format": "double",
          "description": "Gets or sets the foreign dividend income.",
          "type": "number"
        },
        "foreignIncome": {
          "format": "double",
          "description": "Gets or sets the foreign income.",
          "type": "number"
        },
        "freeJourneyIncome": {
          "format": "double",
          "description": "Gets or sets the free journey income.",
          "type": "number"
        },
        "groupLifeIncome": {
          "format": "double",
          "description": "Gets or sets the group life income.",
          "type": "number"
        },
        "rentalIncome": {
          "format": "double",
          "description": "Gets or sets the rental income.",
          "type": "number"
        },
        "otherBIncome": {
          "format": "double",
          "description": "Gets or sets the other B income.",
          "type": "number"
        },
        "freeBoardIncome": {
          "format": "double",
          "description": "Gets or sets the free board income.",
          "type": "number"
        },
        "freeLodgingIncome": {
          "format": "double",
          "description": "Gets or sets the free lodging income.",
          "type": "number"
        },
        "freeHousingIncome": {
          "format": "double",
          "description": "Gets or sets the free housing income.",
          "type": "number"
        },
        "freePhoneIncome": {
          "format": "double",
          "description": "Gets or sets the free phone income.",
          "type": "number"
        },
        "freeCarIncome": {
          "format": "double",
          "description": "Gets or sets the free car income.",
          "type": "number"
        },
        "freeInternetIncome": {
          "format": "double",
          "description": "Gets or sets the free internet income.",
          "type": "number"
        },
        "freeBoatIncome": {
          "format": "double",
          "description": "Gets or sets the free boat income.",
          "type": "number"
        },
        "freeOtherIncome": {
          "format": "double",
          "description": "Gets or sets the free other income.",
          "type": "number"
        },
        "pensionPaymentIncome": {
          "format": "double",
          "description": "Gets or sets the pension payment income.",
          "type": "number"
        },
        "catchSaleMarketIncome": {
          "format": "double",
          "description": "Gets or sets the catch sale market income.",
          "type": "number"
        },
        "catchSaleFactoryIncome": {
          "format": "double",
          "description": "Gets or sets the catch sale factory income.",
          "type": "number"
        },
        "accountTaxResult": {
          "format": "double",
          "description": "Gets or sets the account tax result.",
          "type": "number"
        },
        "accountShareBusinessAmount": {
          "format": "double",
          "description": "Gets or sets the account share business amount.",
          "type": "number"
        },
        "shareholderDividendIncome": {
          "format": "double",
          "description": "Gets or sets the shareholder dividend income.",
          "type": "number"
        }
      }
    },
    "ServiceListResponse[ExpectedIncome]": {
      "description": "Represents a generic class for a service list response containing items of type T.\r\nFor a singular response data object use ServiceResponse.",
      "type": "object",
      "properties": {
        "data": {
          "description": "Gets or sets the list of data of type T.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpectedIncome"
          }
        },
        "message": {
          "description": "Gets or sets the message string with an initial value of an empty string.",
          "type": "string"
        },
        "chunk": {
          "format": "int32",
          "description": "Gets or sets the chunk value, with a default value of 1.",
          "type": "integer"
        },
        "chunkSize": {
          "format": "int32",
          "description": "Gets or sets the size of the chunk.",
          "type": "integer"
        },
        "totalChunks": {
          "format": "int32",
          "description": "Gets or sets the total number of chunks.\r\nDefault value is 1.",
          "type": "integer"
        },
        "totalRecordsInChunks": {
          "format": "int32",
          "description": "Gets or sets the total number of records in chunks.",
          "type": "integer"
        }
      }
    },
    "ExpectedIncome": {
      "type": "object",
      "properties": {
        "cpr": {
          "type": "string"
        },
        "year": {
          "format": "int32",
          "type": "integer"
        },
        "validFrom": {
          "format": "date-time",
          "type": "string"
        },
        "doExpectAIncome": {
          "type": "boolean"
        },
        "capitalIncome": {
          "format": "double",
          "description": "B1 Renteindtægter pengeinstitut mm.",
          "type": "number"
        },
        "educationSupportIncome": {
          "format": "double",
          "description": "B2 Uddannelsestøtte",
          "type": "number"
        },
        "careFeeIncome": {
          "format": "double",
          "description": "B3 Honorarer, plejevederlag mv.",
          "type": "number"
        },
        "alimonyIncome": {
          "format": "double",
          "description": "B4 Underholdsbidrag (hustrubidrag mv.)",
          "type": "number"
        },
        "benefitsIncome": {
          "format": "double",
          "description": "B5 Frie goder i ansættelsesforhold",
          "type": "number"
        },
        "otherBIncome": {
          "format": "double",
          "description": "B6 Andre B-indkomster",
          "type": "number"
        },
        "grossBusinessIncome": {
          "format": "double",
          "description": "Erhvervsindtægter i alt",
          "type": "number"
        },
        "catchSaleFactoryIncome": {
          "format": "double",
          "description": "E2 Indhandling",
          "type": "number"
        },
        "catchSaleMarketIncome": {
          "format": "double",
          "description": "E3 Salg på brættet / husflid",
          "type": "number"
        },
        "bussinessInterestIncome": {
          "format": "double",
          "description": "E8 Erhvervsmæssige renteindtægter",
          "type": "number"
        },
        "extraordinaryBussinessIncome": {
          "format": "double",
          "description": "E9 Ekstraordinære indtægter",
          "type": "number"
        }
      }
    },
    "ServiceListResponse[MonthlyIncome]": {
      "description": "Represents a generic class for a service list response containing items of type T.\r\nFor a singular response data object use ServiceResponse.",
      "type": "object",
      "properties": {
        "data": {
          "description": "Gets or sets the list of data of type T.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MonthlyIncome"
          }
        },
        "message": {
          "description": "Gets or sets the message string with an initial value of an empty string.",
          "type": "string"
        },
        "chunk": {
          "format": "int32",
          "description": "Gets or sets the chunk value, with a default value of 1.",
          "type": "integer"
        },
        "chunkSize": {
          "format": "int32",
          "description": "Gets or sets the size of the chunk.",
          "type": "integer"
        },
        "totalChunks": {
          "format": "int32",
          "description": "Gets or sets the total number of chunks.\r\nDefault value is 1.",
          "type": "integer"
        },
        "totalRecordsInChunks": {
          "format": "int32",
          "description": "Gets or sets the total number of records in chunks.",
          "type": "integer"
        }
      }
    },
    "MonthlyIncome": {
      "description": "Represents the monthly income details of an individual for an employer.",
      "type": "object",
      "properties": {
        "cpr": {
          "description": "Represents a CPR (Central Person Register) number as a string.",
          "type": "string"
        },
        "cvr": {
          "description": "Represents a CVR number as a string for the employer of the income information.",
          "type": "string"
        },
        "taxMunicipalityNumber": {
          "description": "Represents the tax municipality no. of the employee.",
          "type": "string"
        },
        "year": {
          "format": "int32",
          "description": "Year of the data",
          "type": "integer"
        },
        "month": {
          "format": "int32",
          "description": "Month of the data",
          "type": "integer"
        },
        "salaryIncome": {
          "format": "double",
          "description": "Gets or sets the salary income for a person. (felt: 5)",
          "type": "number"
        },
        "catchsaleIncome": {
          "format": "double",
          "description": "Gets or sets the catch sale income for a person. (felt: 17)",
          "type": "number"
        },
        "publicAssistanceIncome": {
          "format": "double",
          "description": "Gets or sets the public assistance income for a person. (felt: 6)",
          "type": "number"
        },
        "alimonyIncome": {
          "format": "double",
          "description": "Gets or sets the alimony income for a person. (felt: 7)",
          "type": "number"
        },
        "disGisIncome": {
          "format": "double",
          "description": "Gets or sets the dis/gis income for a person. (felt: 8)",
          "type": "number"
        },
        "retirementPensionIncome": {
          "format": "double",
          "description": "Gets or sets the alimony income for a person. (felt: 9)",
          "type": "number"
        },
        "disabilityPensionIncome": {
          "format": "double",
          "description": "Gets or sets the Disability Pension Income for a person. (felt: 10)",
          "type": "number"
        },
        "ignoredBenefitsIncome": {
          "format": "double",
          "description": "Gets or sets the ignored benefits for a person.",
          "type": "number"
        },
        "employerPaidGLPensionIncome": {
          "format": "double",
          "description": "Gets or sets the employer paid Grenlandic Pension Income for a person. (felt: 13)",
          "type": "number"
        },
        "foreignPensionIncome": {
          "format": "double",
          "description": "Gets or sets the (foreign) pension income for a person. (felt: 11)",
          "type": "number"
        },
        "civilServantPensionIncome": {
          "format": "double",
          "description": "Gets or sets the employer paid Grenlandic Pension Income for a person. (felt: 13)",
          "type": "number"
        },
        "otherPensionIncome": {
          "format": "double",
          "description": "Gets or sets the employer paid Grenlandic Pension Income for a person. (felt: 13)",
          "type": "number"
        }
      }
    },
    "ServiceListResponse[TaxInformation]": {
      "description": "Represents a generic class for a service list response containing items of type T.\r\nFor a singular response data object use ServiceResponse.",
      "type": "object",
      "properties": {
        "data": {
          "description": "Gets or sets the list of data of type T.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxInformation"
          }
        },
        "message": {
          "description": "Gets or sets the message string with an initial value of an empty string.",
          "type": "string"
        },
        "chunk": {
          "format": "int32",
          "description": "Gets or sets the chunk value, with a default value of 1.",
          "type": "integer"
        },
        "chunkSize": {
          "format": "int32",
          "description": "Gets or sets the size of the chunk.",
          "type": "integer"
        },
        "totalChunks": {
          "format": "int32",
          "description": "Gets or sets the total number of chunks.\r\nDefault value is 1.",
          "type": "integer"
        },
        "totalRecordsInChunks": {
          "format": "int32",
          "description": "Gets or sets the total number of records in chunks.",
          "type": "integer"
        }
      }
    },
    "TaxInformation": {
      "description": "Tax related information presented as census.",
      "type": "object",
      "properties": {
        "cpr": {
          "description": "Represents a CPR (Central Person Register) number as a string.",
          "type": "string"
        },
        "year": {
          "format": "int32",
          "description": "The tax year of the census.",
          "type": "integer"
        },
        "taxScope": {
          "description": "The tax scope of the census.",
          "type": "string"
        },
        "startDate": {
          "format": "date-time",
          "description": "The end date of the census. Usually the last date of the year.",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "description": "The start date of the census. Usually the first date of the year.",
          "type": "string"
        },
        "taxMunicipalityNumber": {
          "description": "Represents the tax municipality no. of the employee.",
          "type": "string"
        },
        "cprMunicipalityCode": {
          "description": "Represents the municipality no. of the employee as represented in CPR.",
          "type": "string"
        },
        "regionNumber": {
          "description": "Represents the region no., if indicated.",
          "type": "string"
        },
        "regionName": {
          "description": "Represents the region name, if indicated.",
          "type": "string"
        },
        "districtName": {
          "description": "Represents the district name, if indicated.",
          "type": "string"
        }
      }
    },
    "ServiceListResponse[String]": {
      "description": "Represents a generic class for a service list response containing items of type T.\r\nFor a singular response data object use ServiceResponse.",
      "type": "object",
      "properties": {
        "data": {
          "description": "Gets or sets the list of data of type T.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "message": {
          "description": "Gets or sets the message string with an initial value of an empty string.",
          "type": "string"
        },
        "chunk": {
          "format": "int32",
          "description": "Gets or sets the chunk value, with a default value of 1.",
          "type": "integer"
        },
        "chunkSize": {
          "format": "int32",
          "description": "Gets or sets the size of the chunk.",
          "type": "integer"
        },
        "totalChunks": {
          "format": "int32",
          "description": "Gets or sets the total number of chunks.\r\nDefault value is 1.",
          "type": "integer"
        },
        "totalRecordsInChunks": {
          "format": "int32",
          "description": "Gets or sets the total number of records in chunks.",
          "type": "integer"
        }
      }
    },
    "ServiceListResponse[MunicipalityInformation]": {
      "description": "Represents a generic class for a service list response containing items of type T.\r\nFor a singular response data object use ServiceResponse.",
      "type": "object",
      "properties": {
        "data": {
          "description": "Gets or sets the list of data of type T.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MunicipalityInformation"
          }
        },
        "message": {
          "description": "Gets or sets the message string with an initial value of an empty string.",
          "type": "string"
        },
        "chunk": {
          "format": "int32",
          "description": "Gets or sets the chunk value, with a default value of 1.",
          "type": "integer"
        },
        "chunkSize": {
          "format": "int32",
          "description": "Gets or sets the size of the chunk.",
          "type": "integer"
        },
        "totalChunks": {
          "format": "int32",
          "description": "Gets or sets the total number of chunks.\r\nDefault value is 1.",
          "type": "integer"
        },
        "totalRecordsInChunks": {
          "format": "int32",
          "description": "Gets or sets the total number of records in chunks.",
          "type": "integer"
        }
      }
    },
    "MunicipalityInformation": {
      "description": "Tax related information about municipalities.",
      "type": "object",
      "properties": {
        "taxMunicipalityNumber": {
          "description": "Represents the tax municipality no. of the employee.",
          "type": "string"
        },
        "cprMunicipalityCode": {
          "description": "Represents the municipality no. of the employee as represented in CPR.",
          "type": "string"
        },
        "cprMunicipalityName": {
          "description": "Represents the municipality name of the employee.",
          "type": "string"
        },
        "startYear": {
          "format": "int32",
          "description": "The end year of the municipality.",
          "type": "integer"
        },
        "endYear": {
          "format": "int32",
          "description": "The start year of the municipality.",
          "type": "integer"
        },
        "regionNumber": {
          "format": "int32",
          "description": "Represents the region no., if indicated.",
          "type": "integer"
        },
        "regionName": {
          "description": "Represents the region name, if indicated.",
          "type": "string"
        }
      }
    }
  }
}